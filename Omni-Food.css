/* NOTE: Always make design system at the top of your css file to make it easy for you to choose 
          style decisions, spacing analyzing and color reusability etc, whenever you need to it.        */

/* 

--- 01 TYPOGRAPHY SYSTEM

FONT SIZE SYSTEM (px):
10 / 12 / 14 / 16 / 18 / 20 / 24 / 30 / 36 / 44 / 52 / 62 / 74 / 86 / 98

FONT WEIGHTS:
-Defualt: 400
-Medium: 500
-Semi-Bold: 600
-Bold: 700

LINE HEIGHTS:
-Default: 01
-Small: 1.05
-Medium: 1.5

--- 02 COLORS FOR THE WEB

-Main/Primary: #e67e22
-Tints: #fdf2e9
-Shades:
-Accents
-Grey Color: #555,#333 (Basically used for fonts to relieve eyes while reading).

--- 03 SHADOWS

--- 04 BORDER-RADIUS
-Default: 20px

--- 05 WHITESPACE

SPACING SYSTEM (px):
2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128

*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Explained in "How rem works! */
html {
  font-size: 62.5%;
}

/* For choosing the best typography for your website according to its personality, its better to write 
some code before it, and give it as sans-serif for some time, or set it as default version. */
body {
  font-family: "Rubik", sans-serif;
  color: #555;
  line-height: 1;
  font-weight: 400;
}

/**********************************************************************************/
/* GENERAL REUSABLE COMPONENTS */
/**********************************************************************************/

.section-how {
  background-color: #fdf2e9;
}

.container {
  max-width: 120rem;
  margin: 0 auto;
  padding: 0 2.2rem;

  font-size: 1.8rem;
}

.grid {
  display: grid;
  gap: 9.6rem;
}

.grid--col-2 {
  grid-template-columns: repeat(2, 1fr);
}

.grid--col-3 {
  grid-template-columns: repeat(3, 1fr);
}

.container div {
  padding: 8rem;
  background-color: bisque;
}

.heading-primary {
  font-size: 5.2rem;
  font-weight: 700;
  line-height: 1.05;
  color: #333;
  letter-spacing: -1px; /* Here we use px because it is a tiny difference and it does not affect on font-size */
  margin-bottom: 3.2rem;
}

.btn:link,
.btn:visited {
  font-size: 1.8rem;
  text-decoration: none;
  font-weight: 600;

  display: inline-block;
  padding: 1.6rem 3.2rem;
  border-radius: 20px; /* We dont want to scale that up!, so we fix this value as in pixels. */

  /* The transition property allows us to transition(fade from one to another) between two elements using an animation */
  /* Remember: Always use transition property on original(parent) element. */
  transition: all 0.3s; /* Commonly use 0.3s in transition property! */
  /* "all": set all the properties that are linked with button like background-color, border etc*/
  /* You can also specify only one part to animate. Example: transition: background-color 1s; */
}

.btn--primary:link,
.btn--primary:visited {
  background-color: #e67e22;
  color: #fff;
}

.btn--secondary:link,
.btn--secondary:visited {
  background-color: #fff;
  color: #555;
}

.btn--primary:hover,
.btn--primary:active {
  background-color: #e98b38;
}

.btn--secondary:hover,
.btn--secondary:active {
  /* This border makes an effect of glitch in our heading-primary and hero-description â†“ */
  /* border: 1px solid #333; */

  /* In order to avoid glitch, below we use the trick of box shadow which will create exact same border
  but inside of an element. */
  /* Trick to add border inside of an element */
  box-shadow: inset 0 0 0 1px #e67e22;
  /* Here we use "inset" property which basically used for doing operation inside of an element */
  /* So outline will pally inside of the element box! */
}

/* you should ask from me that, Why do not I put margin right on ".btn" class because if we use that class property on another button, then there it will also add margin right! */
/* So for making ".btn" class reusablitity, we make another class for that. */
.btn--margin-right {
  margin-right: 1.6rem;
}

/**********************************************************************************/
/* HEADER */
/**********************************************************************************/

.header {
  font-size: 2rem;
  background-color: #fdf2e9;
  padding: 3.2rem;

  display: flex;
  align-items: center;
  justify-content: space-between;

  /* We define this height because we have to made this navigation-bar as sticky-bar, so In order for 
  making this sticky bar we have to give a fixed height. */
  height: 9.6rem;
}

.logo {
  height: 2.2rem;
}

/**********************************************************************************/
/* NAVIGATION */
/**********************************************************************************/

.main-nav-list {
  list-style: none;

  display: flex;
  align-items: center;
  gap: 3.2rem;
}

.main-nav-link:link,
.main-nav-link:visited {
  display: inline-block;
  font-size: 1.8rem;
  font-weight: 500;
  color: #333;
  text-decoration: none;
  transition: all 0.3s;
}

.main-nav-link:hover,
.main-nav-link:active {
  color: #cf711f;
}

/* We do that, beacuse we want to increase specificity to implement color property and much more!, as
we have above color property etc as well, so it does not implement this below property due to 
its low specificity, that's why! */
/* Note: if you maintain space between them then it will become descendent operator */
.main-nav-link.nav-CTA {
  color: #fff;
  background-color: #e67e22;

  padding: 1.2rem 2.4rem;
  border-radius: 20px; /* Here we again dont want to scale that up, so we fix this value as in pixels. */
}

.main-nav-link.nav-CTA:hover,
.main-nav-link.nav-CTA:active {
  background-color: #e98b38;
}

/**********************************************************************************/
/* HERO SECTION */
/**********************************************************************************/

.hero-section {
  background-color: #fdf2e9;
  padding: 4.8rem 0 9.6rem 0;
}

.hero {
  max-width: 130rem;
  margin: 0 auto;
  /* We give padding because If a user have 607px of width then the hero section is stick like glue 
  to it's windows browser (left/right side), which may affect a bad impact on user interface. */
  padding: 0 2.2rem;

  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 9.6rem;
  align-items: center;
}

.hero-img {
  width: 100%;
}

.hero-description {
  font-size: 2.4rem;
  line-height: 1.5;
  margin-bottom: 4.8rem;
}

.delivered-meals {
  display: flex;
  gap: 1.6rem;

  align-items: center;
  margin-top: 8rem;
}

.delivered-imgs img {
  width: 4.8rem;
  height: 4.8rem;
  border-radius: 50%;
  margin-right: -1.6rem;
  border: 3px solid #fdf2e9;
}

.delivered-imgs img:last-child {
  margin-right: 0;
}

.delivered-text {
  font-size: 1.8rem;
  font-weight: 600;
}

.delivered-text span {
  color: #cf711f;
}
